name: Quantum ML CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  check-merge-conflicts:
    name: Check Merge Conflicts
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout base branch (target)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: base
          fetch-depth: 0

      - name: Checkout head branch (PR)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          path: pr
          fetch-depth: 0

      - name: Check for merge conflicts
        run: |
          git config --global user.email "ci@example.com"
          git config --global user.name "GitHub Action"
          
          cd base
          git remote add pr ../pr
          git fetch pr

          # Attempt the merge
          git merge FETCH_HEAD --no-commit --no-ff || (
            echo "‚ùå Merge conflict detected!" && exit 1
          )

  build-and-test:
    name: Build & Test Notebooks
    runs-on: ubuntu-latest
    needs: check-merge-conflicts
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: quantum-ml
          environment-file: environment.yml
          python-version: 3.10
          auto-activate-base: false

      - name: Install notebook tools
        run: |
          source ~/.bashrc
          conda activate quantum-ml
          pip install papermill nbconvert

      - name: Execute Notebooks
        run: |
          source ~/.bashrc
          conda activate quantum-ml
          mkdir -p artifacts
          for nb in notebooks/*.ipynb; do
            papermill "$nb" "artifacts/$(basename "$nb")"
          done

      - name: Convert Notebooks to HTML
        run: |
          source ~/.bashrc
          conda activate quantum-ml
          mkdir -p artifacts_html
          jupyter nbconvert --to html artifacts/*.ipynb --output-dir artifacts_html

      - name: Upload HTML Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: html-reports
          path: artifacts_html/

  deploy:
    name: Deploy to GitHub Pages
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Download HTML Artifacts
        uses: actions/download-artifact@v4
        with:
          name: html-reports
          path: public

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
